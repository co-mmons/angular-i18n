{"version":3,"file":"angular-intl.js","sources":["ng://@co.mmons/angular-intl/service.ts","ng://@co.mmons/angular-intl/currency-format-pipe.ts","ng://@co.mmons/angular-intl/date-time-format-pipe.ts","ng://@co.mmons/angular-intl/decimal-format-pipe.ts","ng://@co.mmons/angular-intl/message-pipe.ts","ng://@co.mmons/angular-intl/percent-format-pipe.ts","ng://@co.mmons/angular-intl/relative-format-pipe.ts","ng://@co.mmons/angular-intl/validation-error-message-pipe.ts","ng://@co.mmons/angular-intl/value-pipe.ts","ng://@co.mmons/angular-intl/module.ts","ng://@co.mmons/angular-intl/angular-intl.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {AbstractControl} from \"@angular/forms\";\nimport {IntlHelper, MessageRef} from \"@co.mmons/js-intl\";\n\ndeclare var INTL_DEFAULT_LOCALE: string;\n\n@Injectable()\nexport class IntlService extends IntlHelper {\n\n    /**\n     * Returns the language code name from the browser, e.g. \"de\"\n     *\n     * @returns string\n     */\n    static getBrowserLang(): string {\n\n        if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\n            return undefined;\n        }\n\n        let browserLang: any = window.navigator[\"languages\"] ? window.navigator[\"languages\"][0] : undefined;\n        browserLang = browserLang || window.navigator.language || window.navigator[\"browserLanguage\"] || window.navigator[\"userLanguage\"] || INTL_DEFAULT_LOCALE;\n\n        if (browserLang.indexOf('-') !== -1) {\n            browserLang = browserLang.split('-')[0];\n        }\n\n        if (browserLang.indexOf('_') !== -1) {\n            browserLang = browserLang.split('_')[0];\n        }\n\n        return browserLang;\n    }\n\n    /**\n     * Returns the culture language code name from the browser, e.g. \"de-DE\"\n     *\n     * @returns string\n     */\n    static getBrowserLocale(): string {\n\n        if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\n            return INTL_DEFAULT_LOCALE;\n        }\n\n        let browserCultureLang: any = window.navigator[\"languages\"] ? window.navigator[\"languages\"][0] : undefined;\n        browserCultureLang = browserCultureLang || window.navigator.language || window.navigator[\"browserLanguage\"] || window.navigator[\"userLanguage\"];\n\n        return browserCultureLang || INTL_DEFAULT_LOCALE;\n    }\n\n    constructor() {\n        super(undefined);\n    }\n\n    public validationErrorMessage(control: AbstractControl): string {\n\n        if (control.errors) {\n            \n            let anyError = false;\n            let error: any;\n\n            for (let code in control.errors) {\n                error = control.errors[code];\n\n                if (code == \"required\") {\n                    return this.message(\"@co.mmons/angular-intl#validation/requiredError\");\n\n                } else if (code == \"minlength\") {\n                    return this.message(\"@co.mmons/angular-intl#validation/minLengthError\", {length: (error && error.requiredLength) || 0});\n\n                } else if (error instanceof Error && error.message) {\n\n                    if (<any>error.message instanceof MessageRef) {\n                        this.message(error.message);\n                    }\n\n                    return error.message;\n\n                } else if (error instanceof MessageRef) {\n                    return this.message(error);\n\n                } else if (typeof error == \"string\") {\n                    return error;\n                }\n\n                anyError = true;\n            }\n\n            if (anyError) {\n                return this.message(\"@co.mmons/angular-intl#validation/invalidValueError\");\n            }\n        }\n\n        return undefined;\n\n    }\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\nimport {CurrencyAndNumber, Money} from \"@co.mmons/js-intl\";\n\nimport {IntlService} from \"./service\";\n\n@Pipe({\n    name: \"intlCurrencyFormat\"\n})\nexport class IntlCurrencyFormatPipe implements PipeTransform {\n\n    constructor(private service: IntlService) {\n    }\n\n    transform(value: Money | CurrencyAndNumber, predefinedOptionsOrOptions?: string | Intl.NumberFormatOptions, additionalOptions?: Intl.NumberFormatOptions): string {\n        if (typeof predefinedOptionsOrOptions == \"string\") {\n            return this.service.currencyFormat(value, predefinedOptionsOrOptions, additionalOptions);\n        } else {\n            return this.service.currencyFormat(value, predefinedOptionsOrOptions);\n        }\n    }\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\nimport {IntlService} from \"./service\";\n\n@Pipe({\n    name: \"intlDateTimeFormat\"\n})\nexport class IntlDateTimeFormatPipe implements PipeTransform {\n\n    constructor(private service: IntlService) {\n    }\n\n    transform(dateTime: number | Date, options?: any): string {\n        return this.service.dateTimeFormat(dateTime, options);\n    }\n}\n\n@Pipe({\n    name: \"intlDateFormat\"\n})\nexport class IntlDateFormatPipe implements PipeTransform {\n\n    constructor(private service: IntlService) {\n    }\n\n    transform(dateTime: number | Date, options?: any): string {\n        return this.service.dateFormat(dateTime, options);\n    }\n}\n\n@Pipe({\n    name: \"intlTimeFormat\"\n})\nexport class IntlTimeFormatPipe implements PipeTransform {\n\n    constructor(private service: IntlService) {\n    }\n\n    transform(dateTime: number | Date, options?: any): string {\n        return this.service.timeFormat(dateTime, options);\n    }\n}","import {Pipe, PipeTransform} from \"@angular/core\";\nimport {BigNumber} from \"bignumber.js\";\n\nimport {IntlService} from \"./service\";\n\n@Pipe({\n    name: \"intlDecimalFormat\"\n})\nexport class IntlDecimalFormatPipe implements PipeTransform {\n\n    constructor(private service: IntlService) {\n    }\n\n    transform(value: number | BigNumber, predefinedOptionsOrOptions?: string | Intl.NumberFormatOptions, additionalOptions?: Intl.NumberFormatOptions): string {\n        if (typeof predefinedOptionsOrOptions == \"string\") {\n            return this.service.decimalFormat(value, predefinedOptionsOrOptions, additionalOptions);\n        } else {\n            return this.service.decimalFormat(value, predefinedOptionsOrOptions);\n        }\n    }\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\nimport {IntlService} from \"./service\";\nimport {MessageRef} from \"@co.mmons/js-intl\";\n\n@Pipe({\n    name: \"intlMessage\"\n})\nexport class IntlMessagePipe implements PipeTransform {\n\n    constructor(private service: IntlService) {\n    }\n\n    transform(key: string | MessageRef, values?: any): string {\n        return this.service.message(key, values);\n    }\n}","import {Pipe, PipeTransform} from \"@angular/core\";\nimport {BigNumber} from \"bignumber.js\";\n\nimport {IntlService} from \"./service\";\n\n@Pipe({\n    name: \"intlPercentFormat\"\n})\nexport class IntlPercentFormatPipe implements PipeTransform {\n\n    constructor(private service: IntlService) {\n    }\n\n    transform(value: number | BigNumber, predefinedOptionsOrOptions?: string | Intl.NumberFormatOptions, additionalOptions?: Intl.NumberFormatOptions): string {\n        if (typeof predefinedOptionsOrOptions == \"string\") {\n            return this.service.percentFormat(value, predefinedOptionsOrOptions, additionalOptions);\n        } else {\n            return this.service.percentFormat(value, predefinedOptionsOrOptions);\n        }\n    }\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\nimport {IntlService} from \"./service\";\n\n@Pipe({\n    name: \"intlRelativeFormatStatic\"\n})\nexport class IntlRelativeFormatStaticPipe implements PipeTransform {\n\n    constructor(private service: IntlService) {\n    }\n\n    transform(dateTime: number | Date, options?: any): string {\n        return this.service.relativeFormat(dateTime, options);\n    }\n}\n\n@Pipe({\n    name: \"intlRelativeFormat\",\n    pure: false\n})\nexport class IntlRelativeFormatPipe implements PipeTransform {\n\n    constructor(private service: IntlService) {\n    }\n\n    private callCount: number = 0;\n\n    private callTime: number;\n\n    private callResult: string;\n\n    transform(dateTime: number | Date, cacheTimeOrOptions?: number | any, options?: any): string {\n\n        let now: number;\n        let cacheTime: number;\n\n        if (typeof cacheTimeOrOptions == \"number\") {\n            cacheTime = cacheTimeOrOptions;\n        } else if (cacheTimeOrOptions && typeof cacheTimeOrOptions === \"object\") {\n            options = cacheTimeOrOptions\n        }\n\n        if (typeof cacheTime === \"undefined\") {\n            cacheTime = (this.callCount || 1) * 10;\n        }\n\n        if (cacheTime > 0) {\n\n            now = Date.now();\n\n            if (this.callTime && this.callTime + (cacheTime * 1000) >= now) {\n                return this.callResult;\n            }\n        }\n\n        let result = this.service.relativeFormat(dateTime, options);\n\n        if (cacheTime > 0) {\n            this.callCount++;\n            this.callTime = now;\n            this.callResult = result;\n        }\n\n        return result;\n    }\n}","import {Pipe, PipeTransform} from \"@angular/core\";\nimport {AbstractControl, ValidationErrors} from \"@angular/forms\";\nimport {IntlService} from \"./service\";\n\n@Pipe({\n    name: \"intlValidationErrorMessage\",\n    pure: false\n})\nexport class IntlValidationErrorMessagePipe implements PipeTransform {\n\n    constructor(private service: IntlService) {\n    }\n\n    private lastMessage: string;\n\n    private lastErrors: ValidationErrors;\n\n    transform(control: AbstractControl): string {\n\n        if (this.lastErrors === control.errors) {\n            return this.lastMessage;\n        }\n\n        this.lastMessage = this.service.validationErrorMessage(control);\n        this.lastErrors = control.errors;\n\n        return this.lastMessage;\n    }\n\n    ngOnDestroy() {\n        this.lastErrors = undefined;\n        this.lastMessage = undefined;\n    }\n}","import {Pipe, PipeTransform} from \"@angular/core\";\nimport {IntlService} from \"./service\";\nimport {IntlValue} from \"@co.mmons/js-intl\";\n\n@Pipe({\n    name: \"intlValue\"\n})\nexport class IntlValuePipe implements PipeTransform {\n\n    constructor(private service: IntlService) {\n    }\n\n    transform(value: IntlValue<any>): any {\n        return this.service.value(value);\n    }\n}","import {ModuleWithProviders, NgModule} from \"@angular/core\";\nimport {IntlCurrencyFormatPipe} from \"./currency-format-pipe\";\nimport {IntlDateFormatPipe, IntlDateTimeFormatPipe, IntlTimeFormatPipe} from \"./date-time-format-pipe\";\nimport {IntlDecimalFormatPipe} from \"./decimal-format-pipe\";\nimport {IntlMessagePipe} from \"./message-pipe\";\nimport {IntlPercentFormatPipe} from \"./percent-format-pipe\";\nimport {IntlRelativeFormatPipe, IntlRelativeFormatStaticPipe} from \"./relative-format-pipe\";\nimport {IntlService} from \"./service\";\nimport {IntlValidationErrorMessagePipe} from \"./validation-error-message-pipe\";\nimport {IntlValuePipe} from \"./value-pipe\";\n\n@NgModule({\n    declarations: [IntlValuePipe, IntlMessagePipe, IntlRelativeFormatStaticPipe, IntlRelativeFormatPipe, IntlDateTimeFormatPipe, IntlTimeFormatPipe, IntlDateFormatPipe, IntlCurrencyFormatPipe, IntlDecimalFormatPipe, IntlPercentFormatPipe, IntlValidationErrorMessagePipe],\n    exports: [IntlValuePipe, IntlMessagePipe, IntlRelativeFormatStaticPipe, IntlRelativeFormatPipe, IntlDateTimeFormatPipe, IntlTimeFormatPipe, IntlDateFormatPipe, IntlCurrencyFormatPipe, IntlDecimalFormatPipe, IntlPercentFormatPipe, IntlValidationErrorMessagePipe]\n})\nexport class IntlModule {\n\n    static forRoot(): ModuleWithProviders {\n        return {ngModule: IntlModule, providers: [IntlService]};\n    }\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}