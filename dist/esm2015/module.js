import * as tslib_1 from "tslib";
var IntlModule_1;
import { NgModule } from "@angular/core";
import { IntlCurrencyFormatPipe } from "./currency-format-pipe";
import { IntlDateFormatPipe, IntlDateTimeFormatPipe, IntlTimeFormatPipe } from "./date-time-format-pipe";
import { IntlDecimalFormatPipe } from "./decimal-format-pipe";
import { IntlMessagePipe } from "./message-pipe";
import { IntlPercentFormatPipe } from "./percent-format-pipe";
import { IntlRelativeFormatPipe, IntlRelativeFormatStaticPipe } from "./relative-format-pipe";
import { IntlService } from "./service";
import { IntlValidationErrorMessagePipe } from "./validation-error-message-pipe";
import { IntlValuePipe } from "./value-pipe";
let IntlModule = IntlModule_1 = class IntlModule {
    static forRoot() {
        return { ngModule: IntlModule_1, providers: [IntlService] };
    }
};
IntlModule = IntlModule_1 = tslib_1.__decorate([
    NgModule({
        declarations: [IntlValuePipe, IntlMessagePipe, IntlRelativeFormatStaticPipe, IntlRelativeFormatPipe, IntlDateTimeFormatPipe, IntlTimeFormatPipe, IntlDateFormatPipe, IntlCurrencyFormatPipe, IntlDecimalFormatPipe, IntlPercentFormatPipe, IntlValidationErrorMessagePipe],
        exports: [IntlValuePipe, IntlMessagePipe, IntlRelativeFormatStaticPipe, IntlRelativeFormatPipe, IntlDateTimeFormatPipe, IntlTimeFormatPipe, IntlDateFormatPipe, IntlCurrencyFormatPipe, IntlDecimalFormatPipe, IntlPercentFormatPipe, IntlValidationErrorMessagePipe]
    })
], IntlModule);
export { IntlModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNvLm1tb25zL2FuZ3VsYXItaW50bC8iLCJzb3VyY2VzIjpbIm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFBc0IsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBQyxzQkFBc0IsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQzlELE9BQU8sRUFBQyxrQkFBa0IsRUFBRSxzQkFBc0IsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZHLE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQzVELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUMvQyxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUM1RCxPQUFPLEVBQUMsc0JBQXNCLEVBQUUsNEJBQTRCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RixPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ3RDLE9BQU8sRUFBQyw4QkFBOEIsRUFBQyxNQUFNLGlDQUFpQyxDQUFDO0FBQy9FLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFNM0MsSUFBYSxVQUFVLGtCQUF2QixNQUFhLFVBQVU7SUFFbkIsTUFBTSxDQUFDLE9BQU87UUFDVixPQUFPLEVBQUMsUUFBUSxFQUFFLFlBQVUsRUFBRSxTQUFTLEVBQUUsQ0FBQyxXQUFXLENBQUMsRUFBQyxDQUFDO0lBQzVELENBQUM7Q0FFSixDQUFBO0FBTlksVUFBVTtJQUp0QixRQUFRLENBQUM7UUFDTixZQUFZLEVBQUUsQ0FBQyxhQUFhLEVBQUUsZUFBZSxFQUFFLDRCQUE0QixFQUFFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLGtCQUFrQixFQUFFLGtCQUFrQixFQUFFLHNCQUFzQixFQUFFLHFCQUFxQixFQUFFLHFCQUFxQixFQUFFLDhCQUE4QixDQUFDO1FBQzFRLE9BQU8sRUFBRSxDQUFDLGFBQWEsRUFBRSxlQUFlLEVBQUUsNEJBQTRCLEVBQUUsc0JBQXNCLEVBQUUsc0JBQXNCLEVBQUUsa0JBQWtCLEVBQUUsa0JBQWtCLEVBQUUsc0JBQXNCLEVBQUUscUJBQXFCLEVBQUUscUJBQXFCLEVBQUUsOEJBQThCLENBQUM7S0FDeFEsQ0FBQztHQUNXLFVBQVUsQ0FNdEI7U0FOWSxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7SW50bEN1cnJlbmN5Rm9ybWF0UGlwZX0gZnJvbSBcIi4vY3VycmVuY3ktZm9ybWF0LXBpcGVcIjtcbmltcG9ydCB7SW50bERhdGVGb3JtYXRQaXBlLCBJbnRsRGF0ZVRpbWVGb3JtYXRQaXBlLCBJbnRsVGltZUZvcm1hdFBpcGV9IGZyb20gXCIuL2RhdGUtdGltZS1mb3JtYXQtcGlwZVwiO1xuaW1wb3J0IHtJbnRsRGVjaW1hbEZvcm1hdFBpcGV9IGZyb20gXCIuL2RlY2ltYWwtZm9ybWF0LXBpcGVcIjtcbmltcG9ydCB7SW50bE1lc3NhZ2VQaXBlfSBmcm9tIFwiLi9tZXNzYWdlLXBpcGVcIjtcbmltcG9ydCB7SW50bFBlcmNlbnRGb3JtYXRQaXBlfSBmcm9tIFwiLi9wZXJjZW50LWZvcm1hdC1waXBlXCI7XG5pbXBvcnQge0ludGxSZWxhdGl2ZUZvcm1hdFBpcGUsIEludGxSZWxhdGl2ZUZvcm1hdFN0YXRpY1BpcGV9IGZyb20gXCIuL3JlbGF0aXZlLWZvcm1hdC1waXBlXCI7XG5pbXBvcnQge0ludGxTZXJ2aWNlfSBmcm9tIFwiLi9zZXJ2aWNlXCI7XG5pbXBvcnQge0ludGxWYWxpZGF0aW9uRXJyb3JNZXNzYWdlUGlwZX0gZnJvbSBcIi4vdmFsaWRhdGlvbi1lcnJvci1tZXNzYWdlLXBpcGVcIjtcbmltcG9ydCB7SW50bFZhbHVlUGlwZX0gZnJvbSBcIi4vdmFsdWUtcGlwZVwiO1xuXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW0ludGxWYWx1ZVBpcGUsIEludGxNZXNzYWdlUGlwZSwgSW50bFJlbGF0aXZlRm9ybWF0U3RhdGljUGlwZSwgSW50bFJlbGF0aXZlRm9ybWF0UGlwZSwgSW50bERhdGVUaW1lRm9ybWF0UGlwZSwgSW50bFRpbWVGb3JtYXRQaXBlLCBJbnRsRGF0ZUZvcm1hdFBpcGUsIEludGxDdXJyZW5jeUZvcm1hdFBpcGUsIEludGxEZWNpbWFsRm9ybWF0UGlwZSwgSW50bFBlcmNlbnRGb3JtYXRQaXBlLCBJbnRsVmFsaWRhdGlvbkVycm9yTWVzc2FnZVBpcGVdLFxuICAgIGV4cG9ydHM6IFtJbnRsVmFsdWVQaXBlLCBJbnRsTWVzc2FnZVBpcGUsIEludGxSZWxhdGl2ZUZvcm1hdFN0YXRpY1BpcGUsIEludGxSZWxhdGl2ZUZvcm1hdFBpcGUsIEludGxEYXRlVGltZUZvcm1hdFBpcGUsIEludGxUaW1lRm9ybWF0UGlwZSwgSW50bERhdGVGb3JtYXRQaXBlLCBJbnRsQ3VycmVuY3lGb3JtYXRQaXBlLCBJbnRsRGVjaW1hbEZvcm1hdFBpcGUsIEludGxQZXJjZW50Rm9ybWF0UGlwZSwgSW50bFZhbGlkYXRpb25FcnJvck1lc3NhZ2VQaXBlXVxufSlcbmV4cG9ydCBjbGFzcyBJbnRsTW9kdWxlIHtcblxuICAgIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgICAgICByZXR1cm4ge25nTW9kdWxlOiBJbnRsTW9kdWxlLCBwcm92aWRlcnM6IFtJbnRsU2VydmljZV19O1xuICAgIH1cblxufVxuIl19